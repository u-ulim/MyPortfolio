"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/notion-blocks";
exports.ids = ["pages/api/notion-blocks"];
exports.modules = {

/***/ "@notionhq/client":
/*!***********************************!*\
  !*** external "@notionhq/client" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("@notionhq/client");

/***/ }),

/***/ "(api)/./pages/api/notion-blocks.js":
/*!************************************!*\
  !*** ./pages/api/notion-blocks.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @notionhq/client */ \"@notionhq/client\");\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_notionhq_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Notion API 클라이언트 초기화\nconst notion = new _notionhq_client__WEBPACK_IMPORTED_MODULE_0__.Client({\n    auth: process.env.NOTION_API_KEY\n});\nasync function handler(req, res) {\n    try {\n        // 요청에서 페이지 ID 추출\n        const { pageId  } = req.query;\n        if (!pageId) {\n            return res.status(400).json({\n                success: false,\n                message: \"페이지 ID가 필요합니다\"\n            });\n        }\n        // 페이지 블록 내용 가져오기\n        const blocks = await notion.blocks.children.list({\n            block_id: pageId\n        });\n        // 블록 내용 처리 및 반환\n        const processedBlocks = await processBlocks(blocks.results);\n        return res.status(200).json({\n            success: true,\n            blocks: processedBlocks\n        });\n    } catch (error) {\n        console.error(\"Notion API Error:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Error fetching blocks from Notion\",\n            error: error.message\n        });\n    }\n}\n// 블록 내용 처리 함수\nasync function processBlocks(blocks) {\n    const processedBlocks = [];\n    for (const block of blocks){\n        let content = {};\n        switch(block.type){\n            case \"paragraph\":\n                content = {\n                    type: \"paragraph\",\n                    text: block.paragraph.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"heading_1\":\n                content = {\n                    type: \"heading_1\",\n                    text: block.heading_1.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"heading_2\":\n                content = {\n                    type: \"heading_2\",\n                    text: block.heading_2.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"heading_3\":\n                content = {\n                    type: \"heading_3\",\n                    text: block.heading_3.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"bulleted_list_item\":\n                content = {\n                    type: \"bulleted_list_item\",\n                    text: block.bulleted_list_item.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"numbered_list_item\":\n                content = {\n                    type: \"numbered_list_item\",\n                    text: block.numbered_list_item.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"to_do\":\n                content = {\n                    type: \"to_do\",\n                    text: block.to_do.rich_text.map((text)=>text.plain_text).join(\"\"),\n                    checked: block.to_do.checked\n                };\n                break;\n            case \"toggle\":\n                content = {\n                    type: \"toggle\",\n                    text: block.toggle.rich_text.map((text)=>text.plain_text).join(\"\"),\n                    has_children: block.has_children\n                };\n                break;\n            case \"image\":\n                content = {\n                    type: \"image\",\n                    url: block.image.type === \"external\" ? block.image.external.url : block.image.file.url,\n                    caption: block.image.caption?.map((text)=>text.plain_text).join(\"\") || \"\"\n                };\n                break;\n            case \"code\":\n                content = {\n                    type: \"code\",\n                    text: block.code.rich_text.map((text)=>text.plain_text).join(\"\"),\n                    language: block.code.language\n                };\n                break;\n            case \"quote\":\n                content = {\n                    type: \"quote\",\n                    text: block.quote.rich_text.map((text)=>text.plain_text).join(\"\")\n                };\n                break;\n            case \"divider\":\n                content = {\n                    type: \"divider\"\n                };\n                break;\n            case \"callout\":\n                content = {\n                    type: \"callout\",\n                    text: block.callout.rich_text.map((text)=>text.plain_text).join(\"\"),\n                    icon: block.callout.icon?.emoji || \"\\uD83D\\uDCA1\"\n                };\n                break;\n            default:\n                content = {\n                    type: block.type,\n                    text: \"지원되지 않는 블록 유형\"\n                };\n        }\n        // 현재 블록 추가\n        const processedBlock = {\n            id: block.id,\n            ...content\n        };\n        processedBlocks.push(processedBlock);\n        // 하위 블록이 있는 경우 재귀적으로 처리\n        if (block.has_children) {\n            const childBlocks = await notion.blocks.children.list({\n                block_id: block.id\n            });\n            // 하위 블록 처리\n            const processedChildBlocks = await processBlocks(childBlocks.results);\n            // 토글 블록인 경우 하위 블록을 children 속성으로 저장\n            if (block.type === \"toggle\") {\n                processedBlock.children = processedChildBlocks;\n            } else {\n                // 토글이 아닌 경우 하위 블록을 배열에 추가\n                processedBlocks.push(...processedChildBlocks);\n            }\n        }\n    }\n    return processedBlocks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/notion-blocks.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/notion-blocks.js"));
module.exports = __webpack_exports__;

})();