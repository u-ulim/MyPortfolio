"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/notion";
exports.ids = ["pages/api/notion"];
exports.modules = {

/***/ "@notionhq/client":
/*!***********************************!*\
  !*** external "@notionhq/client" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("@notionhq/client");

/***/ }),

/***/ "(api)/./pages/api/notion.js":
/*!*****************************!*\
  !*** ./pages/api/notion.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @notionhq/client */ \"@notionhq/client\");\n/* harmony import */ var _notionhq_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_notionhq_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Notion API 클라이언트 초기화\nconst notion = new _notionhq_client__WEBPACK_IMPORTED_MODULE_0__.Client({\n    auth: process.env.NOTION_API_KEY\n});\nasync function handler(req, res) {\n    try {\n        // 요청 메소드 확인\n        if (req.method !== \"GET\") {\n            return res.status(405).json({\n                message: \"Method not allowed\"\n            });\n        }\n        // 요청에서 ID 추출\n        const { id  } = req.query;\n        if (!id) {\n            return res.status(400).json({\n                message: \"Project ID is required\"\n            });\n        }\n        // Notion 데이터베이스 ID (환경 변수로 설정해야 함)\n        const databaseId = process.env.NOTION_DATABASE_ID;\n        // 데이터베이스에서 특정 ID에 해당하는 항목 필터링\n        const response = await notion.databases.query({\n            database_id: databaseId,\n            filter: {\n                property: \"id\",\n                rich_text: {\n                    equals: id\n                }\n            }\n        });\n        // 결과가 없는 경우\n        if (response.results.length === 0) {\n            return res.status(404).json({\n                message: \"Project not found\"\n            });\n        }\n        // 첫 번째 결과를 가져옴\n        const project = response.results[0];\n        // 필요한 프로퍼티 추출\n        const projectData = {\n            id: project.properties.id?.rich_text[0]?.plain_text || \"\",\n            title: project.properties.title?.title[0]?.plain_text || \"\",\n            subTitle01: project.properties.subTitle01?.rich_text[0]?.plain_text || \"\",\n            subTitle01Img: project.properties.subTitle01Img?.url || \"\",\n            subTitle01Description: project.properties.subTitle01Description?.rich_text[0]?.plain_text || \"\",\n            subTitle02: project.properties.subTitle02?.rich_text[0]?.plain_text || \"\",\n            subTitle02Img: project.properties.subTitle02Img?.url || \"\",\n            subTitle02Description: project.properties.subTitle02Description?.rich_text[0]?.plain_text || \"\",\n            description: project.properties.description?.rich_text[0]?.plain_text || \"\"\n        };\n        return res.status(200).json(projectData);\n    } catch (error) {\n        console.error(\"Notion API Error:\", error);\n        return res.status(500).json({\n            message: \"Error fetching data from Notion\",\n            error: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbm90aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUUxQyx1QkFBdUI7QUFDdkIsTUFBTUMsU0FBUyxJQUFJRCxvREFBTUEsQ0FBQztJQUN4QkUsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBQ2xDO0FBRWUsZUFBZUMsUUFBUUMsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDOUMsSUFBSTtRQUNGLFlBQVk7UUFDWixJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztZQUN4QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQXFCO1FBQzlELENBQUM7UUFFRCxhQUFhO1FBQ2IsTUFBTSxFQUFFQyxHQUFFLEVBQUUsR0FBR04sSUFBSU8sS0FBSztRQUV4QixJQUFJLENBQUNELElBQUk7WUFDUCxPQUFPTCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQXlCO1FBQ2xFLENBQUM7UUFFRCxtQ0FBbUM7UUFDbkMsTUFBTUcsYUFBYVosUUFBUUMsR0FBRyxDQUFDWSxrQkFBa0I7UUFFakQsOEJBQThCO1FBQzlCLE1BQU1DLFdBQVcsTUFBTWhCLE9BQU9pQixTQUFTLENBQUNKLEtBQUssQ0FBQztZQUM1Q0ssYUFBYUo7WUFDYkssUUFBUTtnQkFDTkMsVUFBVTtnQkFDVkMsV0FBVztvQkFDVEMsUUFBUVY7Z0JBQ1Y7WUFDRjtRQUNGO1FBRUEsWUFBWTtRQUNaLElBQUlJLFNBQVNPLE9BQU8sQ0FBQ0MsTUFBTSxLQUFLLEdBQUc7WUFDakMsT0FBT2pCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBb0I7UUFDN0QsQ0FBQztRQUVELGVBQWU7UUFDZixNQUFNYyxVQUFVVCxTQUFTTyxPQUFPLENBQUMsRUFBRTtRQUVuQyxjQUFjO1FBQ2QsTUFBTUcsY0FBYztZQUNsQmQsSUFBSWEsUUFBUUUsVUFBVSxDQUFDZixFQUFFLEVBQUVTLFNBQVMsQ0FBQyxFQUFFLEVBQUVPLGNBQWM7WUFDdkRDLE9BQU9KLFFBQVFFLFVBQVUsQ0FBQ0UsS0FBSyxFQUFFQSxLQUFLLENBQUMsRUFBRSxFQUFFRCxjQUFjO1lBQ3pERSxZQUFZTCxRQUFRRSxVQUFVLENBQUNHLFVBQVUsRUFBRVQsU0FBUyxDQUFDLEVBQUUsRUFBRU8sY0FBYztZQUN2RUcsZUFBZU4sUUFBUUUsVUFBVSxDQUFDSSxhQUFhLEVBQUVDLE9BQU87WUFDeERDLHVCQUNFUixRQUFRRSxVQUFVLENBQUNNLHFCQUFxQixFQUFFWixTQUFTLENBQUMsRUFBRSxFQUFFTyxjQUN4RDtZQUNGTSxZQUFZVCxRQUFRRSxVQUFVLENBQUNPLFVBQVUsRUFBRWIsU0FBUyxDQUFDLEVBQUUsRUFBRU8sY0FBYztZQUN2RU8sZUFBZVYsUUFBUUUsVUFBVSxDQUFDUSxhQUFhLEVBQUVILE9BQU87WUFDeERJLHVCQUNFWCxRQUFRRSxVQUFVLENBQUNTLHFCQUFxQixFQUFFZixTQUFTLENBQUMsRUFBRSxFQUFFTyxjQUN4RDtZQUNGUyxhQUNFWixRQUFRRSxVQUFVLENBQUNVLFdBQVcsRUFBRWhCLFNBQVMsQ0FBQyxFQUFFLEVBQUVPLGNBQWM7UUFDaEU7UUFFQSxPQUFPckIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQ2dCO0lBQzlCLEVBQUUsT0FBT1ksT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMscUJBQXFCQTtRQUNuQyxPQUFPL0IsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsU0FBUztZQUNUMkIsT0FBT0EsTUFBTTNCLE9BQU87UUFDdEI7SUFDRjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXRhdmVyc2UxMy8uL3BhZ2VzL2FwaS9ub3Rpb24uanM/MzI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnQgfSBmcm9tIFwiQG5vdGlvbmhxL2NsaWVudFwiO1xuXG4vLyBOb3Rpb24gQVBJIO2BtOudvOydtOyWuO2KuCDstIjquLDtmZRcbmNvbnN0IG5vdGlvbiA9IG5ldyBDbGllbnQoe1xuICBhdXRoOiBwcm9jZXNzLmVudi5OT1RJT05fQVBJX0tFWSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XG4gIHRyeSB7XG4gICAgLy8g7JqU7LKtIOuplOyGjOuTnCDtmZXsnbhcbiAgICBpZiAocmVxLm1ldGhvZCAhPT0gXCJHRVRcIikge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogXCJNZXRob2Qgbm90IGFsbG93ZWRcIiB9KTtcbiAgICB9XG5cbiAgICAvLyDsmpTssq3sl5DshJwgSUQg7LaU7LacXG4gICAgY29uc3QgeyBpZCB9ID0gcmVxLnF1ZXJ5O1xuXG4gICAgaWYgKCFpZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogXCJQcm9qZWN0IElEIGlzIHJlcXVpcmVkXCIgfSk7XG4gICAgfVxuXG4gICAgLy8gTm90aW9uIOuNsOydtO2EsOuyoOydtOyKpCBJRCAo7ZmY6rK9IOuzgOyImOuhnCDshKTsoJXtlbTslbwg7ZWoKVxuICAgIGNvbnN0IGRhdGFiYXNlSWQgPSBwcm9jZXNzLmVudi5OT1RJT05fREFUQUJBU0VfSUQ7XG5cbiAgICAvLyDrjbDsnbTthLDrsqDsnbTsiqTsl5DshJwg7Yq57KCVIElE7JeQIO2VtOuLue2VmOuKlCDtla3rqqkg7ZWE7YSw66eBXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBub3Rpb24uZGF0YWJhc2VzLnF1ZXJ5KHtcbiAgICAgIGRhdGFiYXNlX2lkOiBkYXRhYmFzZUlkLFxuICAgICAgZmlsdGVyOiB7XG4gICAgICAgIHByb3BlcnR5OiBcImlkXCIsIC8vIE5vdGlvbiDrjbDsnbTthLDrsqDsnbTsiqTsnZgg7ZSE66Gc7Y287YuwIOydtOumhFxuICAgICAgICByaWNoX3RleHQ6IHtcbiAgICAgICAgICBlcXVhbHM6IGlkLFxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9KTtcblxuICAgIC8vIOqysOqzvOqwgCDsl4bripQg6rK97JqwXG4gICAgaWYgKHJlc3BvbnNlLnJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiBcIlByb2plY3Qgbm90IGZvdW5kXCIgfSk7XG4gICAgfVxuXG4gICAgLy8g7LKrIOuyiOynuCDqsrDqs7zrpbwg6rCA7KC47Ji0XG4gICAgY29uc3QgcHJvamVjdCA9IHJlc3BvbnNlLnJlc3VsdHNbMF07XG5cbiAgICAvLyDtlYTsmpTtlZwg7ZSE66Gc7Y287YuwIOy2lOy2nFxuICAgIGNvbnN0IHByb2plY3REYXRhID0ge1xuICAgICAgaWQ6IHByb2plY3QucHJvcGVydGllcy5pZD8ucmljaF90ZXh0WzBdPy5wbGFpbl90ZXh0IHx8IFwiXCIsXG4gICAgICB0aXRsZTogcHJvamVjdC5wcm9wZXJ0aWVzLnRpdGxlPy50aXRsZVswXT8ucGxhaW5fdGV4dCB8fCBcIlwiLFxuICAgICAgc3ViVGl0bGUwMTogcHJvamVjdC5wcm9wZXJ0aWVzLnN1YlRpdGxlMDE/LnJpY2hfdGV4dFswXT8ucGxhaW5fdGV4dCB8fCBcIlwiLFxuICAgICAgc3ViVGl0bGUwMUltZzogcHJvamVjdC5wcm9wZXJ0aWVzLnN1YlRpdGxlMDFJbWc/LnVybCB8fCBcIlwiLFxuICAgICAgc3ViVGl0bGUwMURlc2NyaXB0aW9uOlxuICAgICAgICBwcm9qZWN0LnByb3BlcnRpZXMuc3ViVGl0bGUwMURlc2NyaXB0aW9uPy5yaWNoX3RleHRbMF0/LnBsYWluX3RleHQgfHxcbiAgICAgICAgXCJcIixcbiAgICAgIHN1YlRpdGxlMDI6IHByb2plY3QucHJvcGVydGllcy5zdWJUaXRsZTAyPy5yaWNoX3RleHRbMF0/LnBsYWluX3RleHQgfHwgXCJcIixcbiAgICAgIHN1YlRpdGxlMDJJbWc6IHByb2plY3QucHJvcGVydGllcy5zdWJUaXRsZTAySW1nPy51cmwgfHwgXCJcIixcbiAgICAgIHN1YlRpdGxlMDJEZXNjcmlwdGlvbjpcbiAgICAgICAgcHJvamVjdC5wcm9wZXJ0aWVzLnN1YlRpdGxlMDJEZXNjcmlwdGlvbj8ucmljaF90ZXh0WzBdPy5wbGFpbl90ZXh0IHx8XG4gICAgICAgIFwiXCIsXG4gICAgICBkZXNjcmlwdGlvbjpcbiAgICAgICAgcHJvamVjdC5wcm9wZXJ0aWVzLmRlc2NyaXB0aW9uPy5yaWNoX3RleHRbMF0/LnBsYWluX3RleHQgfHwgXCJcIixcbiAgICB9O1xuXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHByb2plY3REYXRhKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiTm90aW9uIEFQSSBFcnJvcjpcIiwgZXJyb3IpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICBtZXNzYWdlOiBcIkVycm9yIGZldGNoaW5nIGRhdGEgZnJvbSBOb3Rpb25cIixcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLFxuICAgIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiQ2xpZW50Iiwibm90aW9uIiwiYXV0aCIsInByb2Nlc3MiLCJlbnYiLCJOT1RJT05fQVBJX0tFWSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsImlkIiwicXVlcnkiLCJkYXRhYmFzZUlkIiwiTk9USU9OX0RBVEFCQVNFX0lEIiwicmVzcG9uc2UiLCJkYXRhYmFzZXMiLCJkYXRhYmFzZV9pZCIsImZpbHRlciIsInByb3BlcnR5IiwicmljaF90ZXh0IiwiZXF1YWxzIiwicmVzdWx0cyIsImxlbmd0aCIsInByb2plY3QiLCJwcm9qZWN0RGF0YSIsInByb3BlcnRpZXMiLCJwbGFpbl90ZXh0IiwidGl0bGUiLCJzdWJUaXRsZTAxIiwic3ViVGl0bGUwMUltZyIsInVybCIsInN1YlRpdGxlMDFEZXNjcmlwdGlvbiIsInN1YlRpdGxlMDIiLCJzdWJUaXRsZTAySW1nIiwic3ViVGl0bGUwMkRlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/notion.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/notion.js"));
module.exports = __webpack_exports__;

})();